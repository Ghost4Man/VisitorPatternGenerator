// <auto-generated/>

namespace Sample.SampleRequest
{
partial interface ISampleRequest
{
    System.Threading.Tasks.ValueTask<TResult> AcceptAsync<TArg1, TArg2, TArg3, TResult>(Sample.SampleRequest.ISampleRequestVisitor2<TArg1, TArg2, TArg3, TResult> visitor, TArg1 arg1, TArg2 arg2, TArg3 arg3);
}
}

namespace Sample.SampleRequest
{
partial interface ISampleRequestVisitor2<in TArg1, in TArg2, in TArg3, TResult>
{
    System.Threading.Tasks.ValueTask<TResult> VisitAsync(Sample.SampleRequest.Sample3Request value, TArg1 arg1, TArg2 arg2, TArg3 arg3);
    System.Threading.Tasks.ValueTask<TResult> VisitAsync(Sample.SampleRequest.Sample1Request value, TArg1 arg1, TArg2 arg2, TArg3 arg3);
    System.Threading.Tasks.ValueTask<TResult> VisitAsync(Sample.SampleRequest.Sample2Request value, TArg1 arg1, TArg2 arg2, TArg3 arg3);
}
}

namespace Sample.SampleRequest
{
partial class Sample3Request: Sample.SampleRequest.ISampleRequest
{
    async System.Threading.Tasks.ValueTask<TResult> Sample.SampleRequest.ISampleRequest.AcceptAsync<TArg1, TArg2, TArg3, TResult>(Sample.SampleRequest.ISampleRequestVisitor2<TArg1, TArg2, TArg3, TResult> visitor, TArg1 arg1, TArg2 arg2, TArg3 arg3) => await visitor.VisitAsync(this, arg1, arg2, arg3);
}
}

namespace Sample.SampleRequest
{
partial class Sample1Request: Sample.SampleRequest.ISampleRequest
{
    async System.Threading.Tasks.ValueTask<TResult> Sample.SampleRequest.ISampleRequest.AcceptAsync<TArg1, TArg2, TArg3, TResult>(Sample.SampleRequest.ISampleRequestVisitor2<TArg1, TArg2, TArg3, TResult> visitor, TArg1 arg1, TArg2 arg2, TArg3 arg3) => await visitor.VisitAsync(this, arg1, arg2, arg3);
}
}

namespace Sample.SampleRequest
{
partial class Sample2Request: Sample.SampleRequest.ISampleRequest
{
    async System.Threading.Tasks.ValueTask<TResult> Sample.SampleRequest.ISampleRequest.AcceptAsync<TArg1, TArg2, TArg3, TResult>(Sample.SampleRequest.ISampleRequestVisitor2<TArg1, TArg2, TArg3, TResult> visitor, TArg1 arg1, TArg2 arg2, TArg3 arg3) => await visitor.VisitAsync(this, arg1, arg2, arg3);
}
}
