// <auto-generated/>

namespace Sample.SampleRequest
{
partial interface ISampleRequest
{
    System.Threading.Tasks.ValueTask<Sample.SampleResponse.ISampleResponse> AcceptAsync(Sample.SampleRequest.ISampleRequestVisitor visitor);
}
}

namespace Sample.SampleRequest
{
partial interface ISampleRequestVisitor
{
    System.Threading.Tasks.ValueTask<Sample.SampleResponse.ISampleResponse> VisitAsync(Sample.SampleRequest.Sample3Request value);
    System.Threading.Tasks.ValueTask<Sample.SampleResponse.Sample1Response> VisitAsync(Sample.SampleRequest.Sample1Request value);
    System.Threading.Tasks.ValueTask<Sample.SampleResponse.Sample2Response> VisitAsync(Sample.SampleRequest.Sample2Request value);
}
}

namespace Sample.SampleRequest
{
partial class Sample3Request: Sample.SampleRequest.ISampleRequest, Sample.IVisitorResult<Sample.SampleResponse.ISampleResponse>
{
    async System.Threading.Tasks.ValueTask<Sample.SampleResponse.ISampleResponse> Sample.SampleRequest.ISampleRequest.AcceptAsync(Sample.SampleRequest.ISampleRequestVisitor visitor) => await visitor.VisitAsync(this);
}
}

namespace Sample.SampleRequest
{
partial class Sample1Request: Sample.SampleRequest.ISampleRequest, Sample.IVisitorResult<Sample.SampleResponse.Sample1Response>
{
    async System.Threading.Tasks.ValueTask<Sample.SampleResponse.ISampleResponse> Sample.SampleRequest.ISampleRequest.AcceptAsync(Sample.SampleRequest.ISampleRequestVisitor visitor) => (Sample.SampleResponse.ISampleResponse)await visitor.VisitAsync(this);
}
}

namespace Sample.SampleRequest
{
partial class Sample2Request: Sample.SampleRequest.ISampleRequest, Sample.IVisitorResult<Sample.SampleResponse.Sample2Response>
{
    async System.Threading.Tasks.ValueTask<Sample.SampleResponse.ISampleResponse> Sample.SampleRequest.ISampleRequest.AcceptAsync(Sample.SampleRequest.ISampleRequestVisitor visitor) => (Sample.SampleResponse.ISampleResponse)await visitor.VisitAsync(this);
}
}
