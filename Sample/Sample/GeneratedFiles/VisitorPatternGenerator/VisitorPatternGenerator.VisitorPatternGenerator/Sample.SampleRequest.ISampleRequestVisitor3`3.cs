// <auto-generated/>

namespace Sample.SampleRequest
{
partial interface ISampleRequest
{
    TResult Accept<T1, T2, TResult>(Sample.SampleRequest.ISampleRequestVisitor3<T1, T2, TResult> visitor, T1 t1, T2 t2) where T1 : class, new() where T2 : struct;
}
}

namespace Sample.SampleRequest
{
partial interface ISampleRequestVisitor3<in T1, in T2, out TResult>
{
    TResult Visit(Sample.SampleRequest.Sample3Request value, T1 t1, T2 t2);
    TResult Visit(Sample.SampleRequest.Sample1Request value, T1 t1, T2 t2);
    TResult Visit(Sample.SampleRequest.Sample2Request value, T1 t1, T2 t2);
}
}

namespace Sample.SampleRequest
{
partial class Sample3Request: Sample.SampleRequest.ISampleRequest
{
    TResult Sample.SampleRequest.ISampleRequest.Accept<T1, T2, TResult>(Sample.SampleRequest.ISampleRequestVisitor3<T1, T2, TResult> visitor, T1 t1, T2 t2) => visitor.Visit(this, t1, t2);
}
}

namespace Sample.SampleRequest
{
partial class Sample1Request: Sample.SampleRequest.ISampleRequest
{
    TResult Sample.SampleRequest.ISampleRequest.Accept<T1, T2, TResult>(Sample.SampleRequest.ISampleRequestVisitor3<T1, T2, TResult> visitor, T1 t1, T2 t2) => visitor.Visit(this, t1, t2);
}
}

namespace Sample.SampleRequest
{
partial class Sample2Request: Sample.SampleRequest.ISampleRequest
{
    TResult Sample.SampleRequest.ISampleRequest.Accept<T1, T2, TResult>(Sample.SampleRequest.ISampleRequestVisitor3<T1, T2, TResult> visitor, T1 t1, T2 t2) => visitor.Visit(this, t1, t2);
}
}
